name: Release Tauri App

on:
  push:
    tags:
      - 'v*' # Trigger on version tags like v1.0.0, v2.1.3

jobs:
  create-release:
    runs-on: ubuntu-latest # Use Ubuntu runner for creating the release draft

    outputs:
      release_id: ${{ steps.create_release.outputs.id }} # Pass the release ID to other jobs

    steps:
      - name: Create Release Draft
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: 'Release ${{ github.ref_name }}'
          body: |
            See the assets below for application builds.
          draft: true # Create a draft first
          prerelease: false

  build-tauri:
    needs: create-release # Run after the release draft is created
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest] # Platforms to build on

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify your Node.js version
          # cache: 'npm' # Or 'yarn' or 'pnpm' depending on your package manager

      # If using pnpm, uncomment the following steps
      # - name: Setup pnpm
      #   uses: pnpm/action-setup@v3
      #   with:
      #     version: 8 # Specify your pnpm version

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      # Add this step to install NSIS on Windows
      - name: Install NSIS (Windows)
        if: matrix.platform == 'windows-latest'
        run: choco install nsis -y --no-progress

      - name: Install frontend dependencies
        # Replace 'npm install' with 'yarn install' or 'pnpm install' if needed
        run: npm install

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0 # Use the official Tauri action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }} # Use the ID from the draft release
          # If using pnpm, add:
          # packageManager: pnpm

  publish-release:
    needs: [create-release, build-tauri] # Run after build jobs complete
    runs-on: ubuntu-latest

    steps:
      - name: Publish Release
        id: publish_release
        uses: actions/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-release.outputs.release_id }} # Use the ID from the draft release
